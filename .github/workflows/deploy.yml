name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Runs on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker CLI
        run: |
          # Remove any existing Docker-related packages
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          # Add Docker's official GPG key
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          # Set up the Docker repository
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          # Install Docker
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          # Start and enable Docker
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t my-html-site .
          docker tag my-html-site ${{ secrets.DOCKER_USERNAME }}/my-html-site:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-html-site:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install Docker CLI
        run: |
          # Remove any existing Docker-related packages
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          # Add Docker's official GPG key
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          # Set up the Docker repository
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          # Install Docker
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          # Start and enable Docker
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: SSH into AWS EC2 & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-html-site:latest
            docker stop my-html-container || true
            docker rm my-html-container || true
            docker run -d --name my-html-container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-html-site:latest